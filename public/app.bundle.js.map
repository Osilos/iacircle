{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/circle.js","webpack:///./js/main.js","webpack:///./js/circlePlayer.js","webpack:///./js/timer.js","webpack:///./js/ia.js","webpack:///./js/agent.js","webpack:///./js/score.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Circle","x","y","color","_classCallCheck","this","size","position","a","b","Math","sqrt","width","height","context","beginPath","fillStyle","arc","PI","fill","stroke","textAlign","fillText","App","canvas","getContext","maxWallSize","minWallSize","numberOfWall","walls","createNewWalls","ia","IA","iaScore","Score","iaGeneration","window","requestAnimationFrame","update","clearRect","iterate","bigger","generation","drawWalls","draw","isNotDone","drawEnd","document","addEventListener","start","once","font","e","timer","isDone","circle","PlayerCircle","clientX","clientY","push","getNewWall","round","random","_this","forEach","element","getElementById","innerWidth","innerHeight","_possibleConstructorReturn","__proto__","getPrototypeOf","shouldGrow","hitBorder","length","getDistance","Timer","reset","interval","setInterval","tick","timeLeft","endtime","Date","now","clear","clearInterval","maxGeneration","populationSize","selectionSize","console","log","bestGeneration","stopGeneration","population","createNewPopulation","scorePopulation","selection","reproduction","Agent","newPopulation","indexA","getIndex","indexB","newAgents","getMix","adn","map","agent","getMutation","concat","sum","score","sort","slice","drawPopulation","_this2","calculateScore","encode","maxSize","shouldStop","otherAdn","splitIndex","floor","createAgentFromAdn","substring","baseAdn","split","newAdn","parseInt","join","decodeAdn","decode","fixSize","decimalToBinary","str","gene","decimal","res","reverse","text"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","class Circle {\r\n    constructor(x, y, color) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.color = color;\r\n        this.size = 50;\r\n    }\r\n\r\n    getDistance(position) {\r\n        let a = position.x - this.x;\r\n        let b = position.y - this.y;\r\n\r\n        return Math.sqrt(a * a + b * b);\r\n    }\r\n\r\n    hitBorder(width, height) {\r\n        return (\r\n            this.x - this.size < 0 ||\r\n            this.y - this.size < 0 ||\r\n            this.x + this.size > width ||\r\n            this.y + this.size > height\r\n        );\r\n    }\r\n\r\n    draw(context) {\r\n        context.beginPath();\r\n        context.fillStyle = 'rgba(255,165,0,0.75)';\r\n        context.arc(this.x, this.y, this.size, 0, 2 * Math.PI);\r\n        context.fill();\r\n\r\n        context.beginPath();\r\n        context.arc(this.x, this.y, 2, 0, 2 * Math.PI);\r\n        context.stroke();\r\n\r\n        context.fillStyle = 'white';\r\n        context.textAlign = 'center';\r\n        context.fillText(this.size * 2, this.x, this.y - 8);\r\n    }\r\n}\r\n\r\nexport default Circle;\r\n","import PlayerCircle from './circlePlayer.js';\r\nimport Timer from './timer.js';\r\nimport IA from './ia.js';\r\nimport Score from './score.js';\r\n\r\nclass App {\r\n    constructor(canvas) {\r\n        this.canvas = canvas;\r\n        this.context = canvas.getContext('2d');\r\n        this.width = canvas.width;\r\n        this.height = canvas.height;\r\n\r\n        this.maxWallSize = 10;\r\n        this.minWallSize = 5;\r\n        this.numberOfWall = 50;\r\n        this.walls = this.createNewWalls();\r\n\r\n        this.ia = new IA(\r\n            this.width,\r\n            this.height,\r\n            this.walls,\r\n            10000,\r\n            'rgba(255,165,0,0.8)',\r\n            this.context\r\n        );\r\n\r\n        this.iaScore = new Score('IA', this.width - 150, 'black');\r\n        this.iaGeneration = new Score(\r\n            'Génération',\r\n            this.width / 2 - 75,\r\n            'black'\r\n        );\r\n        window.requestAnimationFrame(this.update.bind(this));\r\n    }\r\n\r\n    update() {\r\n        this.context.clearRect(0, 0, this.width, this.height);\r\n\r\n        this.ia.iterate();\r\n\r\n        this.iaScore.update(this.ia.bigger.size * 2);\r\n        this.iaGeneration.update(this.ia.generation);\r\n\r\n        this.drawWalls();\r\n\r\n        this.iaScore.draw(this.context);\r\n        this.iaGeneration.draw(this.context);\r\n        this.ia.bigger.draw(this.context);\r\n\r\n        if (this.ia.isNotDone())\r\n            window.requestAnimationFrame(this.update.bind(this));\r\n        else {\r\n            this.drawEnd();\r\n            document.addEventListener('click', start, { once: true });\r\n        }\r\n    }\r\n\r\n    drawEnd() {\r\n        this.context.fillStyle = 'black';\r\n        this.context.font = '30px Arial black';\r\n        this.context.fillText(\r\n            'CLICK TO RESTART',\r\n            this.width / 2,\r\n            this.height / 2\r\n        );\r\n    }\r\n\r\n    onPlayerClick(e) {\r\n        if (!this.timer.isDone())\r\n            this.circle = new PlayerCircle(\r\n                e.clientX,\r\n                e.clientY,\r\n                'rgba(0,0,205, 0.8)'\r\n            );\r\n    }\r\n\r\n    createNewWalls() {\r\n        let walls = [];\r\n        for (let i = 0; i < this.numberOfWall; i++) {\r\n            walls.push(this.getNewWall());\r\n        }\r\n        return walls;\r\n    }\r\n\r\n    getNewWall() {\r\n        return {\r\n            position: {\r\n                x: Math.round(Math.random() * this.width),\r\n                y: Math.round(Math.random() * this.height)\r\n            },\r\n            size: Math.round(\r\n                Math.random() * this.maxWallSize + this.minWallSize\r\n            )\r\n        };\r\n    }\r\n\r\n    drawWalls() {\r\n        this.walls.forEach(element => {\r\n            this.context.beginPath();\r\n            this.context.fillStyle = 'red';\r\n            this.context.arc(\r\n                element.position.x,\r\n                element.position.y,\r\n                element.size,\r\n                0,\r\n                2 * Math.PI\r\n            );\r\n            this.context.fill();\r\n        });\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const canvas = document.getElementById('app');\r\n    canvas.width = window.innerWidth - 20;\r\n    canvas.height = window.innerHeight - 20;\r\n    start();\r\n});\r\n\r\nfunction start() {\r\n    new App(document.getElementById('app'));\r\n}\r\n","import Circle from './circle.js';\r\n\r\nclass PlayerCircle extends Circle {\r\n    constructor(x, y, color) {\r\n        super(x, y, color);\r\n    }\r\n\r\n    update(walls, width, height) {\r\n        let shouldGrow = true;\r\n        if (this.hitBorder(width, height)) {\r\n            shouldGrow = false;\r\n        } else {\r\n            for (let i = 0; i < walls.length; i++) {\r\n                if (\r\n                    this.getDistance(walls[i].position) <\r\n                    this.size + walls[i].size\r\n                ) {\r\n                    shouldGrow = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (shouldGrow) this.size++;\r\n    }\r\n}\r\n\r\nexport default PlayerCircle;\r\n","class Timer {\r\n    constructor(length) {\r\n        this.length = length;\r\n        this.reset();\r\n\r\n        this.interval = setInterval(this.tick.bind(this), 100);\r\n        this.timeLeft = length;\r\n    }\r\n\r\n    reset() {\r\n        this.endtime = Date.now() + this.length * 1000;\r\n    }\r\n\r\n    tick() {\r\n        this.timeLeft = this.endtime - Date.now();\r\n        if (this.timeLeft <= 0) {\r\n            this.clear();\r\n        } else {\r\n            this.timeLeft = Math.round(this.timeLeft / 100) / 10;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        clearInterval(this.interval);\r\n        this.timeLeft = 0;\r\n    }\r\n\r\n    isDone() {\r\n        return this.timeLeft === 0;\r\n    }\r\n\r\n    draw(context) {\r\n        context.fillStyle = 'black';\r\n        context.textAlign = 'left';\r\n        context.font = '20px Arial';\r\n        context.fillText(this.timeLeft + 's', context.canvas.width / 2, 25);\r\n    }\r\n}\r\n\r\nexport default Timer;\r\n","import Agent from './agent.js';\r\n\r\nclass IA {\r\n    constructor(width, height, walls, maxGeneration, color, context) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.walls = walls;\r\n        this.populationSize = 1000;\r\n        this.selectionSize = 50;\r\n        this.color = color;\r\n        this.context = context;\r\n\r\n        console.log(this.color);\r\n\r\n        this.bigger = { size: 1 };\r\n\r\n        this.generation = 1;\r\n        this.bestGeneration = 1;\r\n        this.stopGeneration = 1000;\r\n        this.maxGeneration = maxGeneration;\r\n\r\n        this.population = this.createNewPopulation();\r\n    }\r\n\r\n    isNotDone() {\r\n        return this.generation - this.bestGeneration < this.stopGeneration;\r\n    }\r\n\r\n    iterate() {\r\n        if (this.isNotDone()) {\r\n            this.scorePopulation();\r\n\r\n            this.selection();\r\n            this.reproduction();\r\n            this.generation++;\r\n        } else {\r\n            console.log(this.generation);\r\n        }\r\n    }\r\n\r\n    drawPopulation() {\r\n        this.population.forEach(element => {\r\n            this.context.beginPath();\r\n            let best = element.size === this.bigger.size;\r\n\r\n            this.context.arc(\r\n                element.x,\r\n                element.y,\r\n                element.size,\r\n                0,\r\n                2 * Math.PI\r\n            );\r\n            this.context.stroke();\r\n        });\r\n    }\r\n\r\n    createNewPopulation() {\r\n        let population = [];\r\n        for (let i = 0; i < this.populationSize; i++) {\r\n            let x = Math.round(Math.random() * this.width);\r\n            let y = Math.round(Math.random() * this.height);\r\n            let size = Math.round(Math.random() * this.height);\r\n            population.push(new Agent(x, y, this.color));\r\n        }\r\n        return population;\r\n    }\r\n\r\n    reproduction() {\r\n        let newPopulation = [];\r\n        newPopulation.push(this.population[this.population.length - 1]);\r\n\r\n        while (newPopulation.length - 1 < this.populationSize) {\r\n            const indexA = this.getIndex();\r\n            const indexB = this.getIndex();\r\n            if (indexA === indexB) continue;\r\n\r\n            let newAgents = this.population[indexA].getMix(\r\n                this.population[indexB].adn\r\n            );\r\n            newAgents = newAgents.map(agent => agent.getMutation());\r\n            newPopulation = newPopulation.concat(newAgents);\r\n        }\r\n\r\n        this.population = newPopulation;\r\n    }\r\n\r\n    getIndex() {\r\n        let sum = 0;\r\n        this.population.forEach(agent => (sum += agent.score));\r\n        let random = Math.random() * sum;\r\n        for (let i = 0; i < this.population.length; i++) {\r\n            random -= this.population[i].score;\r\n            if (random < 0) {\r\n                return i;\r\n            }\r\n        }\r\n        return this.population.length - 1;\r\n    }\r\n    selection() {\r\n        this.population = this.population.sort(function(a, b) {\r\n            return a.score - b.score;\r\n        });\r\n        if (\r\n            this.population[this.population.length - 1].size > this.bigger.size\r\n        ) {\r\n            this.bigger = this.population[this.population.length - 1];\r\n            this.bestGeneration = this.generation;\r\n        }\r\n\r\n        this.population = this.population.slice(\r\n            this.population.length - this.selectionSize\r\n        );\r\n        this.drawPopulation();\r\n    }\r\n\r\n    scorePopulation() {\r\n        this.population.forEach(agent => {\r\n            agent.calculateScore(\r\n                this.walls,\r\n                this.width,\r\n                this.width,\r\n                this.height\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nexport default IA;\r\n","import Circle from './circle';\r\n\r\nconst mutationRate = 1 / 30;\r\nconst geneSize = 12;\r\n\r\nclass Agent extends Circle {\r\n    constructor(x, y, color) {\r\n        super(x, y, color);\r\n        this.size = 1;\r\n\r\n        this.adn = this.encode(x, y);\r\n        this.score = 0;\r\n    }\r\n\r\n    calculateScore(walls, maxSize, width, height) {\r\n        let hasBadPosition = false;\r\n        let shouldStop = false;\r\n\r\n        while (this.size < maxSize && !shouldStop) {\r\n            this.size++;\r\n            if (this.hitBorder(width, height)) {\r\n                shouldStop = true;\r\n            } else {\r\n                for (let i = 0; i < walls.length; i++) {\r\n                    if (\r\n                        this.getDistance(walls[i].position) <\r\n                        this.size + walls[i].size\r\n                    ) {\r\n                        shouldStop = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.size--;\r\n\r\n        // console.log('good position');\r\n        this.score = this.size;\r\n    }\r\n\r\n    getMix(otherAdn) {\r\n        const splitIndex = Math.floor(Math.random() * this.adn.length);\r\n        let ag = this.createAgentFromAdn(\r\n            this.adn.substring(0, splitIndex) + otherAdn.substring(splitIndex)\r\n        );\r\n        return [\r\n            this.createAgentFromAdn(\r\n                this.adn.substring(0, splitIndex) +\r\n                    otherAdn.substring(splitIndex)\r\n            ),\r\n            this.createAgentFromAdn(\r\n                otherAdn.substring(0, splitIndex) +\r\n                    this.adn.substring(splitIndex)\r\n            )\r\n        ];\r\n    }\r\n\r\n    getMutation() {\r\n        let baseAdn = this.adn.split('');\r\n        let newAdn = [];\r\n        let hasMutate = false;\r\n        let startMutation = 0;\r\n        let mutationIndex = Math.floor(Math.random() * baseAdn.length);\r\n        for (let i = 0; i < baseAdn.length; i++) {\r\n            if (Math.random() > mutationRate) {\r\n                newAdn.push(parseInt(baseAdn[i]) ? 0 : 1);\r\n            } else newAdn.push(baseAdn[i]);\r\n        }\r\n        // console.log(newAdn);\r\n        return this.createAgentFromAdn(newAdn.join(''));\r\n    }\r\n\r\n    createAgentFromAdn(adn) {\r\n        let decodeAdn = this.decode(adn);\r\n        //console.log(decodeAdn);\r\n        return new Agent(decodeAdn.x, decodeAdn.y);\r\n    }\r\n\r\n    encode(x, y) {\r\n        return (\r\n            this.fixSize(geneSize, this.decimalToBinary(x)) +\r\n            this.fixSize(geneSize, this.decimalToBinary(y))\r\n        );\r\n    }\r\n\r\n    fixSize(size, str) {\r\n        let gene = str;\r\n        // console.log(str);\r\n        while (gene.length < size) {\r\n            gene = '0' + gene;\r\n        }\r\n        // console.log(gene);\r\n        return gene;\r\n    }\r\n\r\n    decimalToBinary(decimal) {\r\n        let x = decimal;\r\n        let res = [];\r\n\r\n        while (x) {\r\n            res.push(x % 2);\r\n            x = Math.floor(x / 2);\r\n        }\r\n\r\n        res.reverse();\r\n        return res.join('');\r\n    }\r\n\r\n    decode(adn) {\r\n        let x = adn.substring(0, geneSize);\r\n        let y = adn.substring(geneSize, adn.length);\r\n        return {\r\n            x: parseInt(x, 2),\r\n            y: parseInt(y, 2)\r\n        };\r\n    }\r\n}\r\n\r\nexport default Agent;\r\n","class Score {\r\n    constructor(name, position, color) {\r\n        this.name = name;\r\n        this.x = position;\r\n        this.color = color;\r\n        this.value = 0;\r\n    }\r\n\r\n    update(value) {\r\n        if (this.value < value) this.value = value;\r\n    }\r\n\r\n    draw(context) {\r\n        context.fillStyle = this.color;\r\n        context.textAlign = 'left';\r\n        context.font = '30px Arial ' + this.color;\r\n        const text = this.name + ': ' + (this.value ? this.value : '...');\r\n        context.fillText(text, this.x, 40);\r\n    }\r\n}\r\n\r\nexport default Score;\r\n"],"sourceRoot":""}